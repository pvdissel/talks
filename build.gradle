buildscript {
    repositories {
        mavenLocal()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        jcenter()
    }

    dependencies {
        classpath 'org.asciidoctor:asciidoctor-gradle-jvm:2.2.0'
        classpath 'org.ajoberstar:gradle-git-publish:2.1.1'
    }
}

import org.asciidoctor.gradle.AsciidoctorTask

// TODO: Somehow create index.html file based on subprojects, linking to each presentation
apply plugin: 'org.ajoberstar.git-publish'
gitPublish {
    repoUri = 'git@github.com:pvdissel/talks.git'
    branch = 'gh-pages'
    repoDir = file("$buildDir/gitPublish")
    contents {
        subprojects.each { p ->
            // TODO: Use output path from 'presentation' task, instead of hardcoding
            from("${p.buildDir}/asciidoc/html5/") {
                rename('presentation.html', 'index.html')
                into p.name
            }
        }

        def tmpDir = file("${buildDir}/tmp")
        tmpDir.mkdirs()
        def index = File.createTempFile('index', '.html', tmpDir)
        index.createNewFile()
        index.withWriter { c ->
            c.writeLine '<html>'
            c.writeLine '<body>'
            c.writeLine '<h1>Talks</h1>'
            c.writeLine '<dl>'
            subprojects.each { p ->
                def (date, title, location) = p.name.split('_')
                c.writeLine """<dt><a href="${p.name}/">${title.capitalize()}</a></dt>"""
                c.writeLine "<dd>${date} at ${location}</dd>"
            }
            c.writeLine '</dl>'
            c.writeLine '</body>'
            c.writeLine '</html>'
        }
        from(index) {
            rename(/.*/, 'index.html')
        }
    }
    commitMessage = 'Updating talks'
}

gradle.afterProject { project, projectState ->
    project.tasks.findAll { it.name == 'presentation' }.each {
        rootProject.gitPublishPush.dependsOn it
    }
}

subprojects {
    repositories.jcenter()
    apply plugin: "org.asciidoctor.convert"

    ext.backendPath = "${rootDir}/.backends/reveal.js/v3.8.0"

    task presentation(type: AsciidoctorTask) {
        sourceDir = file('src/docs/asciidoc')
        sources {
            include 'presentation.adoc'
        }
        resources {
            from("${backendPath}/resources") {
                include '**/*'
            }
            from("${sourceDir}/../resources") {
                include '**/*'
            }
        }
        logDocuments = true
        options = [
                template_engine: 'slim',
                template_dirs  : ["${backendPath}/templates/asciidoctor-reveal.js-2.0.0/templates" as String]
        ]
    }
}
